(define (even? n)
 (= (remainder n 2) 0))

(define (expt-iter a b n)
 (cond ((= n 0) a)
       ((even? n) (expt-iter (* a b b) (* b b) (- (/ n 2) 1)))
       (else (expt-iter (* a b) b (- n 1))))
)

(define (expt b n)
 (expt-iter 1 b n))

(expt 3 0)
(expt 3 1)
(expt 3 2)
(expt 3 3)
(expt 3 4)
(expt 3 5)
(expt 3 6)
(expt 3 7)
(expt 4 0)
(expt 4 1)
(expt 4 2)
(expt 4 3)
