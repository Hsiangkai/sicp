(define (product term a next b)
 (define (iter x result)
  (if (> x b)
     result
     (iter (next x) (* result (term x)))))
 (iter a 1)
)

(define (identity a) (display a) (display "\n") a)
(define (inc a) (+ a 1))

(define (factorial n)
 (product identity 1 inc n))

(factorial 5)
(factorial 8)

(define (square x) (* x x))

(define (pi-term n)
 (/ (* (+ (* 2.0 n) 2) (+ (* 2.0 n) 4)) (square (+ (* 2.0 n) 3))))

(define (pi-estimate n)
  (* 4 (product pi-term 0 inc n))
)

(pi-estimate 10000)
