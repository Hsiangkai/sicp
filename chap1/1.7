(define (average x y)
  (/ (+ x y) 2))

(define (improve guess x)
  (average guess (/ x guess)))

(define (large-good-enough? guess x)
  (< (abs (- (square guess) x)) 0.001))

(define (small-good-enough? guess next-guess)
  (< (/ (abs (- guess next-guess)) guess) 0.001))

(define (sqrt-iter guess x)
  (if (if (< x 1) (small-good-enough? guess (improve guess x)) (large-good-enough? guess x))
      guess
      (sqrt-iter (improve guess x)
                 x)))

(define (sqrt x)
  (sqrt-iter 1.0 x))

(sqrt 0.0000001)
(sqrt 0.0001)
(sqrt 2)
(sqrt 9)
(sqrt 10)
(sqrt 1000000)
(sqrt 100000000000000)
(sqrt 10000000000000000000000000000)
(sqrt 9999999999999999999999999999)
